<Window x:Class="QuickMusic3.MVVM.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:viewmodel="clr-namespace:QuickMusic3.MVVM.ViewModel"
        xmlns:view="clr-namespace:QuickMusic3.MVVM.View"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        mc:Ignorable="d"
        Height="340"
        Width="1300"
        MinHeight="200"
        WindowStyle="SingleBorderWindow"
        ResizeMode="CanResize"
        Background="{Binding Shared.ActiveTheme.AlbumBackground}"
        Title="{Binding Shared.Player.CurrentTrack.Metadata.Title, StringFormat=Quick Music â€“ {0}, FallbackValue=Quick Music}"
        Closed="Window_Closed"
        IsVisibleChanged="Window_IsVisibleChanged">
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="30"
                      ResizeBorderThickness="5" />
    </WindowChrome.WindowChrome>
    <Window.InputBindings>
        <KeyBinding Key="Space"
                    Command="{Binding Shared.PlayPauseCommand}" />
        <KeyBinding Key="K"
                    Command="{Binding Shared.PlayPauseCommand}" />
        <KeyBinding Key="MediaPlayPause"
                    Command="{Binding Shared.PlayPauseCommand}" />
        <KeyBinding Modifiers="Ctrl"
                    Key="Left"
                    Command="{Binding Shared.PrevCommand}" />
        <KeyBinding Modifiers="Ctrl"
                    Key="Right"
                    Command="{Binding Shared.NextCommand}" />
        <KeyBinding Key="MediaPreviousTrack"
                    Command="{Binding Shared.PrevCommand}" />
        <KeyBinding Key="MediaNextTrack"
                    Command="{Binding Shared.NextCommand}" />
        <KeyBinding Key="Up"
                    Command="{Binding Shared.ChangeVolumeCommand}">
            <KeyBinding.CommandParameter>
                <sys:Single>0.05</sys:Single>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="VolumeUp"
                    Command="{Binding Shared.ChangeVolumeCommand}">
            <KeyBinding.CommandParameter>
                <sys:Single>0.05</sys:Single>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="Down"
                    Command="{Binding Shared.ChangeVolumeCommand}">
            <KeyBinding.CommandParameter>
                <sys:Single>-0.05</sys:Single>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="VolumeDown"
                    Command="{Binding Shared.ChangeVolumeCommand}">
            <KeyBinding.CommandParameter>
                <sys:Single>-0.05</sys:Single>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="R"
                    Command="{Binding Shared.ChangeRepeatCommand}" />
        <KeyBinding Key="M"
                    Command="{Binding Shared.ChangeMuteCommand}" />
        <KeyBinding Key="VolumeMute"
                    Command="{Binding Shared.ChangeMuteCommand}" />
        <KeyBinding Key="Left"
                    Command="{Binding Shared.SeekCommand}">
            <KeyBinding.CommandParameter>
                <sys:Double>-2</sys:Double>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="Right"
                    Command="{Binding Shared.SeekCommand}">
            <KeyBinding.CommandParameter>
                <sys:Double>2</sys:Double>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Modifiers="Shift"
                    Key="Left"
                    Command="{Binding Shared.SeekCommand}">
            <KeyBinding.CommandParameter>
                <sys:Double>-5</sys:Double>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Modifiers="Shift"
                    Key="Right"
                    Command="{Binding Shared.SeekCommand}">
            <KeyBinding.CommandParameter>
                <sys:Double>5</sys:Double>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="J"
                    Command="{Binding Shared.SeekCommand}">
            <KeyBinding.CommandParameter>
                <sys:Double>-10</sys:Double>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="L"
                    Command="{Binding Shared.SeekCommand}">
            <KeyBinding.CommandParameter>
                <sys:Double>10</sys:Double>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Modifiers="Shift"
                    Key="J"
                    Command="{Binding Shared.SeekCommand}">
            <KeyBinding.CommandParameter>
                <sys:Double>-60</sys:Double>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Modifiers="Shift"
                    Key="L"
                    Command="{Binding Shared.SeekCommand}">
            <KeyBinding.CommandParameter>
                <sys:Double>60</sys:Double>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="OemComma"
                    Command="{Binding Shared.SeekCommand}">
            <KeyBinding.CommandParameter>
                <sys:Double>-0.1</sys:Double>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="OemPeriod"
                    Command="{Binding Shared.SeekCommand}">
            <KeyBinding.CommandParameter>
                <sys:Double>0.1</sys:Double>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Modifiers="Ctrl"
                    Key="O"
                    Command="{Binding BrowseCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
        <KeyBinding Modifiers="Ctrl"
                    Key="Down"
                    Command="{Binding HideWindowCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
        <KeyBinding Modifiers="Alt"
                    Key="D"
                    Command="{Binding Shared.ChangeThemeCommand}" />
        <KeyBinding Key="Tab"
                    Command="{Binding ChangeViewCommand}" />
    </Window.InputBindings>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/Icons.xaml" />
                <ResourceDictionary Source="Resources/Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <viewmodel:MainViewModel x:Key="ViewModel" />
            <StackPanel x:Key="PopupTopRight"
                        Orientation="Horizontal">
                <view:CustomButton x:Name="PopupCloseButton"
                                   Height="32"
                                   Width="32"
                                   Style="{StaticResource Button}"
                                   NoHover="Transparent"
                                   BorderThickness="0"
                                   VerticalAlignment="Top"
                                   Margin="0,0,10,0">
                    <Path Fill="#c42b1c"
                          Margin="-6"
                          Stretch="Uniform"
                          Data="{StaticResource CloseIcon}" />
                </view:CustomButton>
                <view:CustomButton x:Name="PopupRestoreButton"
                                   Height="32"
                                   Width="32"
                                   Style="{StaticResource Button}"
                                   NoHover="Transparent"
                                   BorderThickness="0"
                                   VerticalAlignment="Top">
                    <Path Style="{StaticResource FillPath}"
                          Margin="-6"
                          Stretch="Uniform"
                          Data="{StaticResource UpIcon}"
                          Opacity="0.3" />
                </view:CustomButton>
            </StackPanel>
            <tb:TaskbarIcon x:Key="TaskbarIcon"
                            DataContext="{StaticResource ViewModel}"
                            IconSource="/Resources/quick_music.ico"
                            ToolTipText="Quick Music"
                            PopupActivation="RightClick"
                            NoLeftClickDelay="True"
                            Visibility="{Binding Tag.TrayIconVisibility, RelativeSource={RelativeSource Self}}">
                <tb:TaskbarIcon.TrayPopup>
                    <Border BorderBrush="Black"
                            Width="410"
                            BorderThickness="2">
                        <view:SizeHost ButtonSize="32,32">
                            <view:MediaDisplay MetadataFontSize="18"
                                               TopRight="{StaticResource PopupTopRight}">
                                <view:MediaDisplay.MediaControls>
                                    <view:MediaControls VolumeWidth="50" />
                                </view:MediaDisplay.MediaControls>
                            </view:MediaDisplay>
                        </view:SizeHost>
                    </Border>
                </tb:TaskbarIcon.TrayPopup>
            </tb:TaskbarIcon>
            <view:MediaControls x:Key="MediaControls"
                                VolumeWidth="100">
                <view:MediaControls.BottomRight>
                    <view:CustomButton Width="84"
                                       Command="{Binding BrowseCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                       Style="{StaticResource Button}"
                                       FontSize="18"
                                       Margin="6,0,0,0"
                                       Content="Browse">
                    </view:CustomButton>
                </view:MediaControls.BottomRight>
            </view:MediaControls>
        </ResourceDictionary>
    </Window.Resources>
    <Window.DataContext>
        <StaticResource ResourceKey="ViewModel" />
    </Window.DataContext>
    <view:SizeHost ButtonSize="42,42">
        <Grid>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Margin"
                            Value="0" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                                     Value="Maximized">
                            <Setter Property="Margin"
                                    Value="7" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Border Background="{Binding Shared.ActiveTheme.Header}">
                <Grid>
                    <StackPanel Orientation="Horizontal"
                                Margin="7,7,7,7"
                                HorizontalAlignment="Left">
                        <Image Source="/Resources/quick_music.ico"
                               RenderOptions.BitmapScalingMode="HighQuality"
                               Margin="0,0,7,0" />
                        <TextBlock VerticalAlignment="Center"
                                   Text="{Binding Title, RelativeSource={RelativeSource AncestorType=Window}}"
                                   Foreground="{Binding Shared.ActiveTheme.Text}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal"
                                HorizontalAlignment="Right">
                        <view:CustomButton Style="{StaticResource Button}"
                                           Width="50"
                                           Height="Auto"
                                           WindowChrome.IsHitTestVisibleInChrome="True"
                                           Command="{Binding MinimizeWindowCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                           NoHover="Transparent"
                                           BorderThickness="0">
                            <Path Style="{StaticResource FillPath}"
                                  Margin="15,5,15,5"
                                  Stretch="Uniform"
                                  Data="{StaticResource MinimizeIcon}"
                                  Opacity="0.5" />
                        </view:CustomButton>
                        <view:CustomButton Style="{StaticResource Button}"
                                           Width="50"
                                           Height="Auto"
                                           WindowChrome.IsHitTestVisibleInChrome="True"
                                           Command="{Binding MaximizeWindowCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                           NoHover="Transparent"
                                           BorderThickness="0">
                            <Path Style="{StaticResource StrokePath}"
                                  StrokeThickness="2"
                                  Margin="17,8,17,8"
                                  Stretch="Uniform"
                                  Data="{StaticResource SquareIcon}"
                                  Opacity="0.3" />
                        </view:CustomButton>
                        <view:CustomButton Style="{StaticResource Button}"
                                           Width="50"
                                           Height="Auto"
                                           WindowChrome.IsHitTestVisibleInChrome="True"
                                           Command="{Binding CloseWindowCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                           NoHover="Transparent"
                                           Hover="#c42b1c"
                                           BorderThickness="0">
                            <Path Margin="13,0,13,0"
                                  Stretch="Uniform"
                                  Data="{StaticResource CloseIcon}">
                                <Path.Style>
                                    <Style TargetType="Path">
                                        <Setter Property="Opacity"
                                                Value="0.4" />
                                        <Setter Property="Fill"
                                                Value="{Binding Shared.ActiveTheme.Icon}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}"
                                                         Value="True">
                                                <DataTrigger.Setters>
                                                    <Setter Property="Opacity"
                                                            Value="1" />
                                                    <Setter Property="Fill"
                                                            Value="White" />
                                                </DataTrigger.Setters>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Path.Style>
                            </Path>
                        </view:CustomButton>
                    </StackPanel>
                </Grid>
            </Border>
            <ContentControl Content="{Binding ActiveViewModel}"
                            Grid.Row="1">
                <ContentControl.Resources>
                    <DataTemplate DataType="{x:Type viewmodel:NowPlayingViewModel}">
                        <view:MediaDisplay MetadataFontSize="36"
                                           MediaControls="{StaticResource MediaControls}">
                            <view:MediaDisplay.TopRight>
                                <view:CustomButton Height="40"
                                                   Width="40"
                                                   Command="{Binding HideWindowCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                   Style="{StaticResource Button}"
                                                   NoHover="Transparent"
                                                   BorderThickness="0"
                                                   VerticalAlignment="Top">
                                    <Path Style="{StaticResource FillPath}"
                                          Margin="-6"
                                          Stretch="Uniform"
                                          Data="{StaticResource DownIcon}"
                                          Opacity="0.3" />
                                </view:CustomButton>
                            </view:MediaDisplay.TopRight>
                        </view:MediaDisplay>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewmodel:PlaylistViewModel}">
                        <ContentControl Content="{StaticResource MediaControls}" />
                    </DataTemplate>
                </ContentControl.Resources>
            </ContentControl>
        </Grid>
    </view:SizeHost>
</Window>

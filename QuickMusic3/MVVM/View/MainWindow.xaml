<Window x:Class="QuickMusic3.MVVM.View.MainWindow"
        x:Name="ThisWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:QuickMusic3"
        xmlns:converters="clr-namespace:QuickMusic3.Converters"
        xmlns:viewmodel="clr-namespace:QuickMusic3.MVVM.ViewModel"
        xmlns:view="clr-namespace:QuickMusic3.MVVM.View"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        mc:Ignorable="d"
        Height="340"
        Width="1300"
        MinHeight="200"
        MinWidth="690"
        WindowStyle="None"
        ResizeMode="CanResize"
        Background="{Binding ActiveTheme.AlbumBackground, ElementName=ThisWindow}"
        Title="{Binding Player.CurrentTrack.Metadata.Title, StringFormat=Quick Music â€“ {0}}"
        Closed="Window_Closed"
        IsVisibleChanged="Window_IsVisibleChanged">
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="30"
                      ResizeBorderThickness="5" />
    </WindowChrome.WindowChrome>
    <Window.InputBindings>
        <KeyBinding Key="Space"
                    Command="{Binding PlayPauseCommand}" />
        <KeyBinding Key="K"
                    Command="{Binding PlayPauseCommand}" />
        <KeyBinding Key="MediaPlayPause"
                    Command="{Binding PlayPauseCommand}" />
        <KeyBinding Modifiers="Ctrl"
                    Key="Left"
                    Command="{Binding PrevCommand}" />
        <KeyBinding Modifiers="Ctrl"
                    Key="Right"
                    Command="{Binding NextCommand}" />
        <KeyBinding Key="MediaPreviousTrack"
                    Command="{Binding PrevCommand}" />
        <KeyBinding Key="MediaNextTrack"
                    Command="{Binding NextCommand}" />
        <KeyBinding Key="Up"
                    Command="{Binding ChangeVolumeCommand}">
            <KeyBinding.CommandParameter>
                <sys:Single>0.05</sys:Single>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="VolumeUp"
                    Command="{Binding ChangeVolumeCommand}">
            <KeyBinding.CommandParameter>
                <sys:Single>0.05</sys:Single>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="Down"
                    Command="{Binding ChangeVolumeCommand}">
            <KeyBinding.CommandParameter>
                <sys:Single>-0.05</sys:Single>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="VolumeDown"
                    Command="{Binding ChangeVolumeCommand}">
            <KeyBinding.CommandParameter>
                <sys:Single>-0.05</sys:Single>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="R"
                    Command="{Binding ChangeRepeatCommand}" />
        <KeyBinding Key="M"
                    Command="{Binding ChangeMuteCommand}" />
        <KeyBinding Key="VolumeMute"
                    Command="{Binding ChangeMuteCommand}" />
        <KeyBinding Key="Left"
                    Command="{Binding SeekCommand}">
            <KeyBinding.CommandParameter>
                <sys:Double>-2</sys:Double>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="Right"
                    Command="{Binding SeekCommand}">
            <KeyBinding.CommandParameter>
                <sys:Double>2</sys:Double>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Modifiers="Shift"
                    Key="Left"
                    Command="{Binding SeekCommand}">
            <KeyBinding.CommandParameter>
                <sys:Double>-5</sys:Double>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Modifiers="Shift"
                    Key="Right"
                    Command="{Binding SeekCommand}">
            <KeyBinding.CommandParameter>
                <sys:Double>5</sys:Double>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="J"
                    Command="{Binding SeekCommand}">
            <KeyBinding.CommandParameter>
                <sys:Double>-10</sys:Double>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="L"
                    Command="{Binding SeekCommand}">
            <KeyBinding.CommandParameter>
                <sys:Double>10</sys:Double>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Modifiers="Shift"
                    Key="J"
                    Command="{Binding SeekCommand}">
            <KeyBinding.CommandParameter>
                <sys:Double>-60</sys:Double>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Modifiers="Shift"
                    Key="L"
                    Command="{Binding SeekCommand}">
            <KeyBinding.CommandParameter>
                <sys:Double>60</sys:Double>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="OemComma"
                    Command="{Binding SeekCommand}">
            <KeyBinding.CommandParameter>
                <sys:Double>-0.1</sys:Double>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="OemPeriod"
                    Command="{Binding SeekCommand}">
            <KeyBinding.CommandParameter>
                <sys:Double>0.1</sys:Double>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Modifiers="Ctrl"
                    Key="O"
                    Command="{Binding BrowseCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
        <KeyBinding Modifiers="Ctrl"
                    Key="Down"
                    Command="{Binding HideWindowCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
        <KeyBinding Modifiers="Alt"
                    Key="D"
                    Command="{Binding ChangeThemeCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
    </Window.InputBindings>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <viewmodel:MainViewModel x:Key="ViewModel" />
            <Style x:Key="MediaButton"
                   TargetType="view:CustomButton">
                <Setter Property="Focusable"
                        Value="False" />
                <Setter Property="Foreground"
                        Value="{Binding Theme.Text, RelativeSource={RelativeSource AncestorType=view:MediaControls}}" />
                <Setter Property="NoHover"
                        Value="{Binding Theme.Button, RelativeSource={RelativeSource AncestorType=view:MediaControls}}" />
                <Setter Property="Hover"
                        Value="{Binding Theme.ButtonHover, RelativeSource={RelativeSource AncestorType=view:MediaControls}}" />
                <Setter Property="BorderBrush"
                        Value="{Binding Theme.ButtonOutline, RelativeSource={RelativeSource AncestorType=view:MediaControls}}" />
                <Setter Property="BorderThickness"
                        Value="1" />
            </Style>
            <Style x:Key="LocalButton"
                   TargetType="view:CustomButton">
                <Setter Property="Focusable"
                        Value="False" />
                <Setter Property="Foreground"
                        Value="{Binding ActiveTheme.Text, ElementName=ThisWindow}" />
                <Setter Property="NoHover"
                        Value="{Binding ActiveTheme.Button, ElementName=ThisWindow}" />
                <Setter Property="Hover"
                        Value="{Binding ActiveTheme.ButtonHover, ElementName=ThisWindow}" />
                <Setter Property="BorderBrush"
                        Value="{Binding ActiveTheme.ButtonOutline, ElementName=ThisWindow}" />
                <Setter Property="BorderThickness"
                        Value="1" />
            </Style>
            <StackPanel x:Key="IconTopRight"
                        Orientation="Horizontal">
                <view:CustomButton x:Name="CloseButton"
                                   Height="32"
                                   Width="32"
                                   Style="{StaticResource MediaButton}"
                                   NoHover="Transparent"
                                   BorderThickness="0"
                                   VerticalAlignment="Top"
                                   Margin="0,0,10,0">
                    <Path Fill="DarkRed"
                          Margin="-6"
                          Stretch="Uniform"
                          Data="{StaticResource CloseIcon}" />
                </view:CustomButton>
                <view:CustomButton x:Name="ShowButton"
                                   Height="32"
                                   Width="32"
                                   Style="{StaticResource MediaButton}"
                                   NoHover="Transparent"
                                   BorderThickness="0"
                                   VerticalAlignment="Top">
                    <Path Fill="{Binding Theme.Icon, RelativeSource={RelativeSource AncestorType=view:MediaControls}}"
                          Margin="-6"
                          Stretch="Uniform"
                          Data="{StaticResource UpIcon}"
                          Opacity="0.3" />
                </view:CustomButton>
            </StackPanel>
            <tb:TaskbarIcon x:Key="TaskbarIcon"
                            DataContext="{StaticResource ViewModel}"
                            IconSource="/Resources/quick_music.ico"
                            ToolTipText="Quick Music"
                            PopupActivation="RightClick"
                            NoLeftClickDelay="True"
                            Visibility="{Binding Tag.TrayIconVisibility, RelativeSource={RelativeSource Self}}">
                <tb:TaskbarIcon.TrayPopup>
                    <Border BorderBrush="Black"
                            BorderThickness="2">
                        <view:MediaControls Width="410"
                                            ButtonSize="32,32"
                                            VolumeWidth="50"
                                            MetadataFontSize="18"
                                            TopRight="{StaticResource IconTopRight}"
                                            Theme="{Binding Tag.ActiveTheme, RelativeSource={RelativeSource AncestorType=Border}}" />
                    </Border>
                </tb:TaskbarIcon.TrayPopup>
            </tb:TaskbarIcon>
        </ResourceDictionary>
    </Window.Resources>
    <Window.DataContext>
        <StaticResource ResourceKey="ViewModel" />
    </Window.DataContext>
    <Grid>
        <Grid.Style>
            <Style TargetType="Grid">
                <Setter Property="Margin"
                        Value="0" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState}"
                                 Value="Maximized">
                        <DataTrigger.Setters>
                            <Setter Property="Margin"
                                    Value="7" />
                        </DataTrigger.Setters>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Border Background="{Binding ActiveTheme.Header, ElementName=ThisWindow}">
            <Grid>
                <StackPanel Orientation="Horizontal"
                            Margin="7,7,7,7"
                            HorizontalAlignment="Left">
                    <Image Source="/Resources/quick_music.ico"
                           RenderOptions.BitmapScalingMode="HighQuality"
                           Margin="0,0,7,0" />
                    <TextBlock VerticalAlignment="Center"
                               Text="{Binding Player.CurrentTrack.Metadata.Title, StringFormat=Quick Music â€“ {0}}"
                               Foreground="{Binding ActiveTheme.Text, ElementName=ThisWindow}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right">
                    <view:CustomButton Style="{StaticResource LocalButton}"
                                       WindowChrome.IsHitTestVisibleInChrome="True"
                                       Command="{Binding MinimizeWindowCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                       NoHover="Transparent"
                                       BorderThickness="0">
                        <Path Fill="{Binding ActiveTheme.Icon, ElementName=ThisWindow}"
                              Margin="15,5,15,5"
                              Stretch="Uniform"
                              Data="{StaticResource MinimizeIcon}"
                              Opacity="0.5" />
                    </view:CustomButton>
                    <view:CustomButton Style="{StaticResource LocalButton}"
                                       WindowChrome.IsHitTestVisibleInChrome="True"
                                       Command="{Binding MaximizeWindowCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                       NoHover="Transparent"
                                       BorderThickness="0">
                        <Path Stroke="{Binding ActiveTheme.Icon, ElementName=ThisWindow}"
                              StrokeThickness="2"
                              Margin="15,8,15,8"
                              Stretch="Uniform"
                              Data="{StaticResource SquareIcon}"
                              Opacity="0.3" />
                    </view:CustomButton>
                    <view:CustomButton Style="{StaticResource LocalButton}"
                                       WindowChrome.IsHitTestVisibleInChrome="True"
                                       Command="{Binding CloseWindowCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                       NoHover="Transparent"
                                       Hover="#c42b1c"
                                       BorderThickness="0">
                        <Path Margin="15,0,15,0"
                              Stretch="Uniform"
                              Data="{StaticResource CloseIcon}">
                            <Path.Style>
                                <Style TargetType="Path">
                                    <Setter Property="Opacity"
                                            Value="0.4" />
                                    <Setter Property="Fill"
                                            Value="{Binding ActiveTheme.Icon, ElementName=ThisWindow}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}"
                                                     Value="True">
                                            <DataTrigger.Setters>
                                                <Setter Property="Opacity"
                                                        Value="1" />
                                                <Setter Property="Fill"
                                                        Value="White" />
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>
                    </view:CustomButton>
                </StackPanel>
            </Grid>
        </Border>
        <view:MediaControls x:Name="MediaControls"
                            Grid.Row="1"
                            ButtonSize="42,42"
                            VolumeWidth="100"
                            MetadataFontSize="36"
                            Theme="{Binding ActiveTheme, ElementName=ThisWindow}">
            <view:MediaControls.TopRight>
                <view:CustomButton Height="40"
                                   Width="40"
                                   Command="{Binding HideWindowCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                   Style="{StaticResource MediaButton}"
                                   NoHover="Transparent"
                                   BorderThickness="0"
                                   VerticalAlignment="Top">
                    <Path Fill="{Binding ActiveTheme.Icon, RelativeSource={RelativeSource AncestorType=Window}}"
                          Margin="-6"
                          Stretch="Uniform"
                          Data="{StaticResource DownIcon}"
                          Opacity="0.3" />
                </view:CustomButton>
            </view:MediaControls.TopRight>
            <view:MediaControls.BottomRight>
                <view:CustomButton Height="42"
                                   Width="84"
                                   Command="{Binding BrowseCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                   Style="{StaticResource Button}"
                                   FontSize="18"
                                   Margin="6,0,0,0"
                                   Content="Browse">
                </view:CustomButton>
            </view:MediaControls.BottomRight>
        </view:MediaControls>
    </Grid>
</Window>
